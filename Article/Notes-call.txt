ETAPES A SUIVRE : 
* Infrastrucure du code et framework du backtest 
-> Envoyer un mail à Celia pour lui dire ce qu'on va tester 
* Tester la significativité des résultats (t-stat, pas besoin des fama-french, ...) 

ARCHITECTURE DU CODE : 
* Importation et premier traitement des données : main function = bds 
* Signal : tris des portefeuilles, création des Ri, Vj, ... en déduire notre selection (croisement des deux calculs) 
* Stratégie d'allocation : pondération du portefeuille -> equipondéré, 1/vol, 1/n (+ Markowitz) 
PS : le vol scalling permet de moins pondérer les stocks les plus volatiles
* Calcul des performances : performances annualisées, sharpe, volatilité, draw down, durée du recovery, VaR 
+++ Ne surtout pas oublier de faire un graph de performance (exemple en page 2044)
* Balancement dans PORT (bloom) 

A faire avec un indice de notre choix + le RUSSEL INDEX comme backtest 
PS : le back test permet d'améliorer le signal 


STRATEGIE CENTRALE DU PAPIER : 
= On est long sur un portefeuille et short sur un autre 
Donc la somme des poids est nulle : les positifs et négatifs s'annulent 

OBJECT PRINCIPAL DU PROJET : 
* Proposer une stratégie d'investissement, le papier sert juste à donner l'idée 


DONNEES : 
* Période : depuis 1999 pour avoir des données 2000
* Les découper en sous-échantillons pour l'étude (ex : de 2010 à aujourd'hui, de 2020 à aujourd'hui) 
* 99% du marché américain est décrit et expliqué par le RUSSEL INDEX : 1000 (les plus grosses) ou 2000 (après les 1000) 
= Large & Mid cap (assez liquide) 
-> On peut se contenter des 1000 plus grosses 
On devrait pouvoir récupérer les compositions mensuelles : les récupérer sur les dates de fin de mois

- TurnOver : Volume / Nb shares qui existes
PS : x% des shares peuvent être changées tous les jours, Celia trouve que la formule du papier est nulle 
Ca serait mieux de prendre : TurnOver = Volume / nb Shares * flottant ; ce qui permettrait d'enlever les shares non traitables tous les jours 
- PE : champs sur bloom ? 
- B/M Ratio : book to market (dispo sur bloom) = market value / market cap 
- Return on equity -> sur Bloom 


CONSEILS : 
* Mesure des performance : le plus important c'est la construction du track record (perf du début et de la fin du backtest) 
-> Il faut utiliser la fonctionnalité PORT de bloom pour s'assurer que nos résultats sont corrects (test avec 3-4 stocks et une alloc simple) 
* Préparer un plan d'action clair et essayer de coder environs 45 minutes par jours pour s'y tenir 
* Sortir les données une fois et les enregistrer pour ne plus avoir besoin de bloom 
* Faire une seul BDH sur toute la durée du backtest et slicer ensuite 
* Ne pas faire la partie sur les earnings 
* Pas besoin de faire tout les tests de robustesse, mais certains sont pas mal, on peut les faire ou s'en inspirer 



FLEXIBILITE DU CODE : 
* Le signal est spécifique à notre cas, tout le reste doit pouvoir être adaptable (récupération des données, calcul des rendements, ...)
* Exemple : l'outil doit pouvoir être testé sur un autre indice 
* Fréquence de rebalancement des portefeuilles (pas forcément tous les mois) 
* Inputs du nombre de portefeuille voulu ... 


STRATEGIE FINALE : 
* Fréquence de rebalancement 


PROJET A SOUTENIR FIN MAI 
Pendant la soutenance, on devra faire tourner en direct le code pour la meilleure strat 
PS : si le code est flexible, on l'adapte pour la best strat en forcant les arguments qu'on a choisis dans une unique fonction "best_strat" ? 


En gros : 
PHASE 1 : construction de l'outil 
PHASE 2 : test (graphs, ...) 
PHASE 3 : modifier le signal pour avoir la strat finale 
PS : on réécrit le ou les signaux proprement (on choisit ce signal pour l'implémentation) 
ou : 
PARTIE 1 : framework du backtest (générique et flexible) 
RECHERCHE : on a le signal, on le test avec différent trucs (rob test + test stat de significativité)
PARTIE FINAL : modification après test